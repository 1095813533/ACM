单词接龙

题目描述 
单词接龙是一个与我们经常玩的成语接龙相类似的游戏，现在我们已知一组单词，且给定一个开头的字母，要求出以这个字母开头的最长的“龙”（每个单词都最多在“龙”中出现两次），在两个单词相连时，其重合部分合为一部分，例如beast和astonish，如果接成一条龙则变为beastonish，另外相邻的两部分不能存在包含关系，例如at和atide间不能相连。
输入描述:
输入的第一行为一个单独的整数n(n ≤ 20)表示单词数，以下n行每行有一个单词，输入的最后一行为一个单个字符，表示“龙”开头的字母。你可以假定以此字母开头的“龙”一定存在.
输出描述:
只需输出以此字母开头的最长的“龙”的长度
示例1
输入
复制
5
at
touch
cheat
choose
tact
a
输出
复制
23
说明
连成的“龙”为atoucheatactactouchoose
AC代码
#include<bits/stdc++.h>
using namespace std;
int n, ans = 0, vis[20] = {0};
string s[20], t;
void dfs(string a){
    int len1 = a.size();
    ans = max(ans, len1);
    for(int i = 0; i < n; ++i){
        int len2  =s[i].size();
        if(vis[i] == 2) continue;
        for(int j = 1; j < min(len1+1,len2); j++){
            if(!s[i].find(a.substr(len1 - j,j))){
                vis[i]++;
                dfs(a+s[i].substr(j,len2-j));
                vis[i]--;
                break;
            }
        }
    }
}
main()
{
   cin >> n;
   for(int i=0;i<n;i++) cin>>s[i];
   cin >> t;
   dfs(t);
   cout<<ans;
}
牛牛学括号
题目描述 
牛牛最近在学习括号匹配问题

给你一个合法的括号序列，每次操作分两步，第一步删除第一个左括号，第二步删除某一个右括号，要保证删除之后的括号序列还是合法的,求将括号删到空为止一共有多少种不同的删除方法，两种方法不同当且仅当存在某一步右括号的删除位置不同，答案膜1e9+7

输入描述:
输入一个字符串s只包含左右括号, 2 ≤ |s| ≤ 2500
输出描述:
输出一个整数
示例1
输入
复制
()()()()()
输出
复制
1
示例2
输入
复制
(((())))
输出
复制
24
示例3
输入
复制
((()))(()(()))((()))
输出
复制
432
备注:
子任务一30分：n<=20

子任务二30分：n<=100

子任务三40分：n<=2500
AC代码
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define maxn 2505
char str[maxn];
const int mod = 1e9+7;
int main()
{
    cin >> str;
    int t = 0;
    ll sum = 1;
    for(int i = 0;i < strlen(str); i++){
        if(str[i] == '('){
            t++;
        }
        else{
            sum = (sum % mod * t % mod) % mod;
            t--;
        }
    }
    cout<<sum<<endl;
}
