链接：https://ac.nowcoder.com/acm/contest/625/H
# H Parco_Love_GCD
题目描述<br>
众所周知，在算法竞赛中，出题人对他出的题的难度往往存在错误的估计。比如出题人本想出个中等题，没想到却出成了简单题；本想出个自闭题，结果数据太水变成了签到题。因此，为了让一场比赛能有良好的体验，有一个靠谱的验题人是非常重要的。<br>
CC出好题目后，便拿给小马哥看。不出所料，这些题目小马哥全都是看一眼就会做了。而且，小马哥觉得这些题对于参赛选手来说也太水了（5个签到题哦～）。为了避免发生全场十几个队AK这种紧急事态，小马哥决定把一道签到题改成简单题，于是便有了现在这个题目。<br>
小马哥非常喜欢数论，尤其钟爱“最大公约数”（Greatest Common Divisor，简称GCD）这一概念，因此他打算出一道和GCD有关的题目。小马哥首先给出了含n个正整数的序列a1,a2,...,an ，然后让你考虑该序列的所有子区间的数对应的GCD值，也就是说考虑所有gcd(al,...,ar)的值。显然，这样的值一共有n(n+1)/2个。一个中二出题人可能会让你求这数中第k大的数，但幸运的是，小马哥是个正经出题人，因此它只让你求这n(n+1)/2个数之和模10^9+7的结果。<br>
小马哥在此预祝大家AK～<br>
输入描述:<br>
第一行是一个整数n(1≤n≤5×10^5)，表示数的个数。<br>
接下来一行给出n个整数，其中第i个整数ai满足1≤ai≤10^9。<br>
输出描述:<br>
输出一行一个整数，表示ans的值。<br>
示例1<br>
输入<br>
```
5
16 4 7 21 3
```
输出<br>
```
72
```
```cpp
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int maxn = 5000;
const int N=5e5+5;
const int P=1e9+7;
int n,i,j,ans,a[N],l[N],v[N];
int main()
{
    scanf("%d",&n);
    for(i = 1; i <= n; i++)scanf("%d",&a[i]);
    for(i = 1; i <= n; i++)
	for(v[i] = a[i], j = l[i] = i; j; j =l[j] - 1) {
            v[j]=__gcd(v[j], a[i]);
            while(l[j] > 1 && __gcd(a[i], v[l[j]-1])==__gcd(a[i], v[j]))
		l[j]=l[l[j]-1];
            ans=(1LL * v[j] * (j-l[j]+1) + ans) % P;
        }
    printf("%d",ans);
    return 0;
}

```
